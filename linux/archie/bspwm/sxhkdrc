#
# wm independent hotkeys
#

# terminal emulator
{super, alt} + Return
	alacritty

# program launcher
super + shift + space
	dmenu_run -fn 'Input-12' -l 5 -m $(($(bspc query -M | grep -n "$(bspc query -M -m focused)" | cut -f1 -d:)-1))

# make sxhkd reload its configuration files:
{super, alt} + shift + Escape
	pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {t,r}
	bspc {quit,wm -r}

# close/kill
super + {_,shift + }q
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + b
	bspc desktop -l next

# send the newest marked node to the newest preselected node
#super + y
#	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the previous window
super + w
	bspc node -s last.window

#
# state/flags
#

# set the window state
super + {r,t,g}
	bspc node -t {floating,tiled,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
alt + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus or send to the given desktop
#alt + {_,shift + }{1,2,3,4,5,6,7,8,9,0}
#	bspc {desktop -f,node -d} '^{1,6,2,7,3,8,4,9,5,10}'
alt + {_,shift + }{1,2,3,4,5,6,7,8}
	bspc {desktop -f,node -d} '^{1,2,3,4,5,6,7,8}'
super + {_,shift + }{1,2,3,4,5,6,7,8}
	bspc {desktop -f,node -d} '^{1,2,3,4,5,6,7,8}'
alt + button{4,5}
	bspc monitor -f pointed; \
	bspc desktop -f {next,prev}.local

# alt tab
alt + Tab
	bspc node -f last

# super tab to go to last visited workspace
super + Tab
	bspc desktop -f last

# focus the next/previous desktop in the current monitor
alt + {_,shift + }{p,n}
	bspc {desktop -f,node -d} {prev,next}.local
super + {_,shift + }{p,n}
	bspc {desktop -f,node -d} {prev,next}.local

# focus the node for the given path jump
#super + ctrl + {p,b,comma,period}
#	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
#super + {period,comma}
#	bspc node -f {next,prev}.local.!hidden.window

# focus the older or newer node in the focus history
alt + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

#
# preselect
#

# preselect the direction
#super + ctrl + {h,j,k,l}
#	bspc node -p {west,south,north,east}

# preselect the ratio
#super + ctrl + {1-9}
#	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
#super + ctrl + space
#	bspc node -p cancel

# cancel the preselection for the focused desktop
#super + ctrl + shift + space
#	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move and resize windows with mouse
super + !button{1-3}
    bspc pointer -t %i %i

#
# gaps
#

# increase/decrease
#super + {minus,shift + equal}
#	bspc config -d focused window_gap $((`bspc config -d focused window_gap` {-,+} 4 ))

# reset gap size
#super + equal
#	bspc config -d focused window_gap 12

# edge specific padding
#super + {ctrl,alt} + w
#	bspc config -d focused top_padding {$((`bspc config -d focused top_padding` + 10 )), 0}
#super + {ctrl,alt} + a
#	bspc config -d focused left_padding {$((`bspc config -d focused left_padding` + 10 )), 0}
#super + {ctrl,alt} + s
#	bspc config -d focused bottom_padding {$((`bspc config -d focused bottom_padding` + 10 )), 0}
#super + {ctrl,alt} + d
#	bspc config -d focused right_padding {$((`bspc config -d focused right_padding` + 10 )), 0}

# reset padding
#super + alt + backslash
#	bspc config -d focused top_padding 0; bspc config -d focused left_padding 0; bspc config -d focused bottom_padding 0; bspc config -d focused right_padding 0

#
# media keys
#

XF86AudioRaiseVolume
	pactl set-sink-volume @DEFAULT_SINK@ +2%
alt + shift + button4
	pactl set-sink-volume @DEFAULT_SINK@ +2%

XF86AudioLowerVolume
	pactl set-sink-volume @DEFAULT_SINK@ -2%
alt + shift + button5
	pactl set-sink-volume @DEFAULT_SINK@ -2%

XF86AudioMute
	pactl set-sink-mute @DEFAULT_SINK@ toggle

XF86AudioMicMute
	set-source-mute @DEFAULT_SOURCE@ toggle

XF86AudioPlay
	mpris2controller PlayPause
	#playerctl play-pause

XF86AudioPrev
	mpris2controller Previous
	#playerctl previous

XF86AudioNext
	mpris2controller Next
	#playerctl next

#
# audio sink selection
# possible devices:
# pactl list
# pacmd list-sinks
# - alsa_output.usb-Logitech_G533_Gaming_Headset-00.analog-stereo
# - alsa_output.pci-0000_0c_00.3.analog-stereo
#

#super + n
#	pactl set-sink-port alsa_output.pci-0000_0c_00.3.3.analog-stereo analog-output-headphones & polybar-msg action "#sound-sink-status.hook.1"
#
#super + m
#	pactl set-sink-port alsa_output.pci-0000_0c_00.3.3.analog-stereo analog-output-lineout & polybar-msg action "#sound-sink-status.hook.2"

# 'Analogue Stereo Ouput' configuration
super + shift + n
	pactl set-sink-port alsa_output.pci-0000_0c_00.3.analog-stereo analog-output-headphones & polybar-msg action "#sound-sink-status.hook.1"
super + shift + m
	pactl set-sink-port alsa_output.pci-0000_0c_00.3.analog-stereo analog-output-lineout & polybar-msg action "#sound-sink-status.hook.2"

#alt + n
#	pacmd "set-default-sink alsa_output.usb-Logitech_G533_Gaming_Headset-00.analog-stereo" & polybar-msg hook sound-sink-status 2
#
#alt + m
#	pacmd "set-default-sink alsa_output.pci-0000_0c_00.3.analog-stereo" & polybar-msg hook sound-sink-status 3

#
# paste from primary clipboard https://unix.stackexchange.com/questions/11889/pasting-x-selection-not-clipboard-contents-with-keyboard
#

#shift + Insert
	#xsel | xvkbd -xsendevent -file -

#
# application shortcuts
#

super + {f,e,c}
	{firefox, nemo, code}
