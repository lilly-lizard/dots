// Place your key bindings in this file to override the defaults
[
	{
		"key": "ctrl+-",
		"command": "-workbench.action.zoomOut"
	},
	{
		"key": "ctrl+=",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "ctrl+shift+-",
		"command": "workbench.action.zoomOut"
	},
	{
		"key": "ctrl+shift+=",
		"command": "workbench.action.zoomIn"
	},
	{
		"key": "ctrl+=",
		"command": "editor.action.fontZoomIn"
	},
	{
		"key": "ctrl+-",
		"command": "editor.action.fontZoomOut"
	},
	{
		"key": "ctrl+alt+s",
		"command": "cSpell.toggleEnableForGlobal"
	},
	{
		"key": "ctrl+alt+v",
		"command": "toggleVim"
	},
	{
		"key": "ctrl+alt+down",
		"command": "editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+alt+down",
		"command": "-editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+alt+up",
		"command": "editor.action.copyLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+alt+up",
		"command": "-editor.action.copyLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+insert",
		"command": "editor.action.selectionClipboardPaste"
	},
	{
		"key": "shift+insert",
		"command": "-editor.action.clipboardPasteAction"
	},
	{
		"key": "ctrl+k ctrl+g",
		"command": "git-graph.view"
	},
	{
		"key": "ctrl+alt+c",
		"command": "-search.action.copyPath",
		"when": "fileMatchOrFolderMatchWithResourceFocus"
	},
	{
		"key": "ctrl+alt+c",
		"command": "-copyFilePath",
		"when": "!editorFocus"
	},
	{
		"key": "ctrl+alt+c",
		"command": "workbench.action.terminal.openNativeConsole",
		"when": "!terminalFocus"
	},
	{
		"key": "ctrl+shift+c",
		"command": "-workbench.action.terminal.openNativeConsole",
		"when": "!terminalFocus"
	},
	{
		"key": "ctrl+shift+q",
		"command": "workbench.action.focusActiveEditorGroup"
	},

	{ "key": "ctrl+tab", "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup" },
    { "key": "ctrl+shift+tab", "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup" },

    { "key": "ctrl+tab", "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen" },
    { "key": "ctrl+shift+tab", "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen" },

    { "key": "ctrl+tab", "command": "workbench.action.quickOpenPreviousRecentlyUsedEditor" },
    { "key": "ctrl+shift+tab", "command": "workbench.action.quickOpenLeastRecentlyUsedEditor" },

    { "key": "ctrl+tab", "command": "workbench.action.quickOpenNavigateNext",
        "when": "inEditorsPicker && inQuickOpen" },
    { "key": "ctrl+shift+tab", "command": "workbench.action.quickOpenNavigatePrevious",
		"when": "inEditorsPicker && inQuickOpen"
	},
	{
		"key": "ctrl+shift+k",
		"command": "selectAllSearchEditorMatches",
		"when": "inSearchEditor"
	},
	{
		"key": "ctrl+shift+l",
		"command": "-selectAllSearchEditorMatches",
		"when": "inSearchEditor"
	},
	{
		"key": "ctrl+shift+k",
		"command": "editor.action.selectHighlights",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+shift+l",
		"command": "-editor.action.selectHighlights",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+shift+k",
		"command": "addCursorsAtSearchResults",
		"when": "fileMatchOrMatchFocus && searchViewletVisible"
	},
	{
		"key": "ctrl+shift+l",
		"command": "-addCursorsAtSearchResults",
		"when": "fileMatchOrMatchFocus && searchViewletVisible"
	},
	{
		"key": "ctrl+shift+l",
		"command": "editor.action.deleteLines",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+k",
		"command": "-editor.action.deleteLines",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+`",
		"command": "-workbench.action.terminal.new",
		"when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
	},
	{
		"key": "ctrl+v",
		"command": "-editor.action.clipboardPasteAction"
	},
]